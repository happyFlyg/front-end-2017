
/* 被编译的 */

//不被编译的

/* @变量名：值 */

@width_test: 100px;
.box {
    width: @width_test;
    height: @width_test;
    .border;
}

// 混合（mixin）
.border {
    border: 3px solid pink
}

.box_2 {
    .box;
    margin-left: 20px;
}

// 混合——可带参数
.border_02(@border_width) {
    border: @border_width solid red;
}

.test_hunhe {
    .border_02(20px)
}

//混合——带默认值
.border_03(@border_width: 5px) {
    border: @border_width solid green
}

.test_hunhe_03 {
    .border_03();
}

.border_radius(@radius: 5px) {
    -webkit-border-radius: @radius;
    -moz-border-radius: @radius;
    border-radius: @radius;
}

.radius_test {
    width: 100px;
    height: 40px;
    background: green;
    .border_radius(50%)
}


/* .arrow{
	height:0;
	width:0;
	overflow: hidden;//处理ie6最小高度
	border-width: 10px;
	border-color: red transparent transparent transparent;
	border-style:solid dashed dashed dashed;//dashed处理ie6的黑边
} */

//匹配模式
.arrow_style(top, @w: 5px, @c: #ccc) {
    border-width: @w;
    border-color: transparent transparent @c transparent;
    border-style: dashed dashed solid dashed;
}

.arrow_style(bottom, @w: 5px, @c: #ccc) {
    border-width: @w;
    border-color: @c transparent transparent transparent;
    border-style: solid dashed dashed dashed;
}

.arrow_style(left, @w: 5px, @c: #ccc) {
    border-width: @w;
    border-color: transparent @c transparent transparent;
    border-style: dashed solid dashed dashed;
}

.arrow_style(right, @w: 5px, @c: #ccc) {
    border-width: @w;
    border-color: transparent transparent transparent @c ;
    border-style: dashed dashed dashed solid;
}


/* //@_不管是上面选择哪个方向，都会带着这个公共的样式 */

.arrow_style(@_, @w: 5px, @c: #ccc) {
    width: 0;
    height: 0;
    overflow: hidden
}

.arrow {
    .arrow_style(right, 100px, green);
}


/* //匹配模式——定位 */

.pos(r) {
    position: relative;
}

.pos(a) {
    position: absolute;
}

.pos(f) {
    position: fixed;
}

.position {
    .pos(r);
}


/* 运算 */

.box_02 {
    @test_01: 300px;
    @color: #ccc;
    width: @test_01+20;
    color: @color+10;
}


/*嵌套*/
/* &代表上一层选择器 */

.list {
    width: 1000px;
    margin: 30px auto;
    padding: 0;
    list-style-type: none;
    li {
        height: auto;
        line-height: 30px;
        background: pink;
        margin-bottom: 5px;
        padding:0 10px;
    }
    a {
        float: left;
        &:hover{
        	color:red;
        }
    }
    span {
        float: right;
    }
}
/* arguments变量 */
.border_arg(@w:30px,@c:red,@solid:solid){
	border:@arguments;
}
.test_arguments{
	.border_arg(10px,#333,dashed);
}
/* 避免编译 */
/* 要输出less不认识的专有语法：可以在字符串前面加一个~。
例如：width:~ calc(100%-35) */
/* 可以使用calc()给元素的border、margin、pading、font-size和width等属性设置动态值*/
.test_calc{
	width:~"-webkit-calc(100% - 40px)";
	width:~"-moz-calc(100% - 40px)";
	width:~"calc(100% - 40px)";
	margin:0 auto;
	height:40px;
	background:blue;
	filter:~"alpha(opacity=50)";
	opacity:0.5;
}
/* //表达式加减前后一定要有空格，乘除不用特意加，但建议加上 */
//
//
//
//
//
//
/* !important关键字  为所有混合带来的样式，添加上!important*/
.test_important{
	.border_radius()!important;
}